/* Задание Graf1: Точка входа для определения степеней вершин графа */

#include "graph_utils.h" // Наш заголовок
#include <iostream>
#include <vector>
#include <string>

// Используем пространство имен std в .cpp файлах
using namespace std;

// --- Константы для имен файлов ---
const string kInputFilename = "graph_input.txt"; // Имя входного файла по умолчанию

/**
 * @brief Основная функция программы.
 * @param argc Количество аргументов командной строки. Ожидается 0 или 1 аргумент (имя файла).
 * @param argv Массив аргументов командной строки. argv[1] может содержать имя файла.
 * @return 0 в случае успешного выполнения, 1 в случае ошибки.
 *
 * Читает граф из файла (имя берется из аргументов или по умолчанию),
 * вычисляет степени вершин и выводит их на консоль.
 */
int main(int argc, char* argv[]) { // Фигурные скобки на той же строке
	string filename = kInputFilename; // Имя файла по умолчанию

	// Проверяем аргументы командной строки для возможности указать имя файла
	if (argc > 2) {
		cerr << "Ошибка: Слишком много аргументов командной строки." << endl;
		cerr << "Использование: " << argv[0] << " [имя_входного_файла]" << endl;
		return 1;
	}
	if (argc == 2) {
		filename = argv[1]; // Используем имя файла из аргумента
	}

	cout << "--- Определение степеней вершин графа ---" << endl;
	cout << "Чтение графа из файла: " << filename << endl;

	vector<vector<int>> adjacency_matrix;
	vector<int> vertex_degrees;

	// 1. Чтение матрицы смежности
	// Зачем? Чтобы получить представление графа из файла.
	if (!ReadAdjacencyMatrix(filename, adjacency_matrix, cerr)) {
		// Сообщение об ошибке уже выведено
		return 1; // Завершаем с ошибкой
	}
	cout << "Матрица смежности успешно прочитана (" << adjacency_matrix.size() << " вершин)." << endl;


	// 2. Вычисление степеней вершин
	// Зачем? Это основная задача программы.
	if (!CalculateVertexDegrees(adjacency_matrix, vertex_degrees, cerr)) {
		// Сообщение об ошибке уже выведено
		return 1; // Завершаем с ошибкой
	}
	cout << "Степени вершин вычислены." << endl;

	// 3. Вывод результатов
	// Зачем? Чтобы показать пользователю вычисленные степени.
	PrintVertexDegrees(vertex_degrees, cout);

	cout << "Работа программы успешно завершена." << endl;
	return 0; // Успешное завершение
}